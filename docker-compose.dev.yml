version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: expense_tracker_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-expense_tracker_dev}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - expense_tracker_dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d expense_tracker_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS API (Development)
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: expense_tracker_api_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: ${PORT:-9009}
      DB_HOST: postgres
      DB_PORT: ${DB_PORT:-5432}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      DB_DATABASE: ${DB_DATABASE:-expense_tracker_dev}
      DB_DIALECT: postgres
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-key}
      DEFAULT_PASSWORD: ${DEFAULT_PASSWORD:-admin123}
      DEFAULT_TIME_ZONE: ${DEFAULT_TIME_ZONE:-Asia/Bangkok}
    ports:
      - "${PORT:-9009}:9009"
      - "9229:9229"  # Debug port
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.build.json:/app/tsconfig.build.json
      - ./nest-cli.json:/app/nest-cli.json
      - ./vitest.config.ts:/app/vitest.config.ts
      - ./vitest.global-setup.ts:/app/vitest.global-setup.ts
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - expense_tracker_dev_network
    command: ["sh", "/app/init-dev.sh"]

volumes:
  postgres_dev_data:
    driver: local

networks:
  expense_tracker_dev_network:
    driver: bridge
