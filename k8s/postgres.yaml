apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: expense-tracker
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/part-of: expense-tracker
spec:
  ports:
    - port: 5432
      name: tcp
  clusterIP: None
  selector:
    app.kubernetes.io/name: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: expense-tracker
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/part-of: expense-tracker
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/part-of: expense-tracker
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: tcp
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: expense-tracker-secrets
                  key: DB_DATABASE
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: expense-tracker-secrets
                  key: DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: expense-tracker-secrets
                  key: DB_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
        # storageClassName: standard

